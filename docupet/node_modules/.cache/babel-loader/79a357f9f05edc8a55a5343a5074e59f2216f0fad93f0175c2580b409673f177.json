{"ast":null,"code":"export default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      form: {\n        petType: 'Dog',\n        name: '',\n        breed: '',\n        breeds: '',\n        gender: null\n      },\n      dogBreeds: [{\n        text: 'Select One',\n        value: null\n      }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n      catBreeds: [{\n        text: 'Select One',\n        value: null\n      }, 'Siamese', 'Maine Coon', 'Persian', 'Sphynx', 'Burmese', 'Birman', 'American Shorthair', \"Can't find it?\"],\n      breedList: [{\n        text: 'Select One',\n        value: null\n      }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n      breedOption: undefined,\n      breedOptions: undefined,\n      selectedGender: false,\n      formMsg: ''\n    };\n  },\n  methods: {\n    checkPetType(e) {\n      if (e == 'Dog') {\n        this.breedList = this.dogBreeds;\n      } else {\n        this.breedList = this.catBreeds;\n      }\n    },\n    updateBreedOption(e, origin) {\n      if (e == `Can't find it?`) {\n        this.breedOption = e;\n      } else {\n        if (origin == 'breed') {\n          this.breedOption = undefined;\n          this.breedOptions = undefined;\n        } else {\n          this.form.breed = '';\n          this.breedOptions = e;\n        }\n      }\n      this.continueReady();\n    },\n    updateGender(e) {\n      this.form.gender = e.target.value;\n      this.selectedGender = this.form.gender;\n      this.continueReady();\n    },\n    clearError() {\n      setTimeout(() => {\n        this.formMsg = '';\n      }, 6000);\n    },\n    continueReady() {\n      let btn = document.getElementById('continue');\n      if (this.form.petType != '' && this.form.name != '' && this.form.gender != '') {\n        btn.classList.remove('disabled');\n        btn.removeAttribute('disabled');\n      } else {\n        btn.classList.add('disabled');\n        btn.setAttribute('disabled', true);\n      }\n    },\n    formRender(e) {\n      e.preventDefault();\n      let obj = {\n        name: '',\n        type: '',\n        breed: '',\n        gender: ''\n      };\n      let breed = '';\n      if (this.form.petType == '') {\n        this.formMsg = 'You need to select what type of pet you have.';\n        this.clearError();\n        return;\n      } else if (this.form.name == '') {\n        this.formMsg = 'You must enter in the pets name.';\n        this.clearError();\n        return;\n      } else if (this.form.gender == '') {\n        this.formMsg = 'You must select the pets gender.';\n        this.clearError();\n        return;\n      } else if (this.form.breed == '' && this.breedOption == undefined) {\n        this.formMsg = 'You need to identify the pets breed.';\n        this.clearError();\n        return;\n      } else if (this.breedOption != undefined) {\n        if (this.breedOptions == 'Unknown') {\n          breed = \"I don't know\";\n        } else if (this.breedOptions == 'Mix') {\n          if (this.form.breeds == '') {\n            this.formMsg = 'You need to best identify the pets breeds.';\n            this.clearError();\n            return;\n          } else {\n            breed = this.form.breeds;\n          }\n        }\n      } else {\n        breed = this.form.breed;\n      }\n      obj.name = this.form.name;\n      obj.type = this.form.petType;\n      obj.breed = breed;\n      obj.gender = this.form.gender;\n      this.onSubmit(e, obj);\n    },\n    onSubmit(event, obj) {\n      event.preventDefault();\n      let formData = new FormData();\n      formData.append('name', obj.name);\n      formData.append('type', obj.type);\n      formData.append('breed', obj.breed);\n      formData.append('gender', obj.gender);\n      try {\n        fetch(\"http://127.0.0.1:8000/api/pets\", {\n          mode: 'no-cors',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: formData,\n          method: \"post\"\n        }).then(() => {\n          this.formMsg = obj.name + ', has been saved.';\n          this.clearError();\n        });\n      } catch (err) {\n        this.formMsg = err.message;\n        this.clearError();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","petType","breed","breeds","gender","dogBreeds","text","value","catBreeds","breedList","breedOption","undefined","breedOptions","selectedGender","formMsg","methods","checkPetType","e","updateBreedOption","origin","continueReady","updateGender","target","clearError","setTimeout","btn","document","getElementById","classList","remove","removeAttribute","add","setAttribute","formRender","preventDefault","obj","type","onSubmit","event","formData","FormData","append","fetch","mode","headers","body","method","then","err","message"],"sources":["src/components/RegisterForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <img src=\"@/assets/paws.png\" class=\"paws\" />\n    <h1>Tell us about your pet</h1>\n    <b-form>\n\n      <b-form-group \n        id=\"input-group-1\" \n        label=\"Choose your type of pet\"\n        label-for=\"petType\"\n        v-slot=\"{ ariaDescribedby }\"\n      >\n        <b-form-radio-group\n          v-model=\"form.petType\"\n          id=\"petType\"\n          :aria-describedby=\"ariaDescribedby\"\n          @change=\"checkPetType($event)\"\n          stacked\n          class=\"custom-control custom-radio\"\n        >\n          <b-form-radio value=\"Dog\" size=\"lg\">Dog</b-form-radio>\n          <b-form-radio value=\"Cat\" size=\"lg\">Cat</b-form-radio>\n        </b-form-radio-group>\n      </b-form-group>\n\n      <!--DOG-->\n      <b-form-group \n        v-if=\"form.petType =='Dog'\"\n        id=\"input-group-2\"\n        label=\"What is your dog's name?\"\n        label-for=\"input-2\"\n      >\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"form.name\"\n          placeholder=\"Milly\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <!--DOG End-->\n\n      <!--CAT-->\n      <b-form-group \n        v-if=\"form.petType =='Cat'\"\n        id=\"input-group-2\"\n        label=\"What is your cat's name?\"\n        label-for=\"input-2\"\n      >\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"form.name\"\n          placeholder=\"Puddles\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <!--CAT end-->\n\n\n      <b-form-group id=\"input-group-3\" label=\"What breed are they?\" label-for=\"input-3\">\n        <b-form-select\n          id=\"input-3\"\n          v-model=\"form.breed\"\n          :options=\"breedList\"\n          @change=\"updateBreedOption($event, 'breed')\"\n        ></b-form-select>\n        <b-icon-search></b-icon-search>\n\n        <b-form-group \n          v-if=\"breedOption != undefined\"\n          id=\"input-group-3b\" \n          label=\"Choose One\"\n          label-for=\"petBreedOption\"\n          v-slot=\"{ ariaDescribedby }\"\n        >\n          <b-form-radio-group\n            id=\"petBreedOption\"\n            :aria-describedby=\"ariaDescribedby\"\n            @change=\"updateBreedOption($event, 'option')\"\n          >\n            <b-form-radio value=\"Unknown\">I don't know</b-form-radio>\n            <b-form-radio value=\"Mix\">It's a mix</b-form-radio>\n          </b-form-radio-group>\n\n          <b-form-group \n            v-if=\"breedOptions =='Mix'\"\n            id=\"input-group-3c\"\n            label-for=\"input-3c\"\n          >\n            <b-form-input\n              id=\"input-3d\"\n              v-model=\"form.breeds\"\n              placeholder=\"Collie, poodle, lab\"\n            ></b-form-input>\n          </b-form-group>\n        </b-form-group>\n      </b-form-group>\n\n      <b-form-group \n        id=\"input-group-4\" \n        label=\"What gender are they?\"\n        label-for=\"gender\"\n        v-slot=\"{ ariaDescribedby }\"\n      >\n        <b-form-radio-group\n          v-model=\"form.gender\"\n          id=\"gender\"\n          :aria-describedby=\"ariaDescribedby\"\n        >\n          <b-button \n            v-bind:class=\"(selectedGender=='Female')?'active-gender':null\"  \n            @click=\"updateGender($event)\" class=\"gender-btn gender-btn-left\" \n            variant=\"outline-primary\" \n            value=\"Female\"\n          >\n            Female\n          </b-button>\n          <b-button \n            v-bind:class=\"(selectedGender=='Male')?'active-gender':null\" \n            @click=\"updateGender($event)\" \n            class=\"gender-btn gender-btn-right\" \n            variant=\"outline-primary\" \n            value=\"Male\"\n          >\n            Male\n          </b-button>\n        </b-form-radio-group>\n      </b-form-group>\n\n      <b-button id=\"continue\" type=\"submit\" class=\"activity-btn\" @click=\"formRender($event)\" disabled>Continue</b-button>\n    </b-form>\n    <p>{{formMsg}}</p>\n    <!-- <b-card class=\"mt-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\">{{ form }}</pre>\n    </b-card> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      form: {\n        petType: 'Dog',\n        name: '',\n        breed: '',\n        breeds: '',\n        gender: null,\n      },\n      dogBreeds: [{ text: 'Select One', value: null }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n      catBreeds: [{ text: 'Select One', value: null }, 'Siamese', 'Maine Coon', 'Persian', 'Sphynx', 'Burmese', 'Birman', 'American Shorthair', \"Can't find it?\"],\n      breedList: [{ text: 'Select One', value: null }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n\n      breedOption: undefined,\n      breedOptions: undefined,\n\n      selectedGender: false,\n\n      formMsg: ''\n    }\n  },\n  methods: {\n    checkPetType(e) {\n      if(e == 'Dog'){\n        this.breedList = this.dogBreeds;\n      }else{\n        this.breedList = this.catBreeds;\n      }\n    },\n    updateBreedOption(e, origin) {\n      if(e == `Can't find it?`){\n        this.breedOption = e;\n      }else{\n        if(origin == 'breed') {\n          this.breedOption = undefined;\n          this.breedOptions = undefined;\n        }else{\n          this.form.breed = '';\n          this.breedOptions = e;\n        }\n      } \n      this.continueReady();    \n    },\n    updateGender(e) {\n      this.form.gender = e.target.value;\n      this.selectedGender = this.form.gender;\n      this.continueReady();\n    },\n    clearError() {\n      setTimeout(()=>{ this.formMsg = ''; }, 6000);   \n    },\n    continueReady() {\n      let btn = document.getElementById('continue');\n      if(this.form.petType != '' && this.form.name != '' && this.form.gender != ''){\n        btn.classList.remove('disabled');\n        btn.removeAttribute('disabled');\n      }else{\n        btn.classList.add('disabled');\n        btn.setAttribute('disabled', true);\n      }\n    },\n    formRender(e) {\n      e.preventDefault();\n\n      let obj = {\n        name:'',\n        type:'',\n        breed:'',\n        gender:''\n      };\n      let breed = '';\n\n      if(this.form.petType == ''){\n        this.formMsg = 'You need to select what type of pet you have.';\n        this.clearError();\n        return;\n      }else if(this.form.name == ''){\n        this.formMsg = 'You must enter in the pets name.';\n        this.clearError();\n        return;\n      }else if(this.form.gender == ''){\n        this.formMsg = 'You must select the pets gender.';\n        this.clearError();\n        return;\n      }else if(this.form.breed == '' && this.breedOption == undefined){\n        this.formMsg = 'You need to identify the pets breed.';\n        this.clearError();\n        return;\n      }else if(this.breedOption != undefined){\n        if(this.breedOptions == 'Unknown'){\n          breed = \"I don't know\";\n        }else if(this.breedOptions == 'Mix'){\n          if(this.form.breeds == '') {\n            this.formMsg = 'You need to best identify the pets breeds.';\n            this.clearError();\n            return;\n          }else{\n            breed = this.form.breeds;\n          }\n        }\n      }else {\n        breed = this.form.breed;\n      }\n\n      obj.name = this.form.name;\n      obj.type = this.form.petType;\n      obj.breed = breed;\n      obj.gender = this.form.gender;\n\n      this.onSubmit(e, obj);\n    },\n    onSubmit(event, obj) {\n      event.preventDefault()\n\n      let formData = new FormData();\n      formData.append('name', obj.name);\n      formData.append('type', obj.type);\n      formData.append('breed', obj.breed);\n      formData.append('gender', obj.gender);\n\n      try {\n        fetch(\"http://127.0.0.1:8000/api/pets\",\n        {\n          mode:'no-cors',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: formData,\n          method: \"post\"\n        }).then(() => {\n          this.formMsg = obj.name + ', has been saved.'\n          this.clearError();\n        });\n      } catch(err) {\n        this.formMsg = err.message;\n        this.clearError();\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color:#072b71;\n  font-weight:bold;\n  font-size:1.5em;\n  margin: 10px 0 20px 0;\n}\nselect {\n  appearance: none;\n  background-color: var(--bs-body-bg);\n  background-clip: padding-box;\n  border: var(--bs-border-width) solid var(--bs-border-color);\n  border-radius: var(--bs-border-radius);\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  width: 100%;\n  height: 38px;\n  text-indent: 13px;\n}\n\n.custom-control-input {\n  margin-right:15px!important;\n}\n\n.container {\n  position:relative;\n  border-radius: 6px;\n  background-color:#fff;\n  box-shadow: rgba(0,0,0,0.07) 0px 5px 5px;\n  padding:10px 50px;\n  height: auto;\n  width:50vw;\n  min-width:0px;\n  max-width:600px;\n  margin:0 auto;\n  margin-top:50px;\n  text-align: left;\n}\n.paws {\n  width:100%;\n}\n\n.form-group {\n  margin: 20px 0;\n}\n\n#petType, #petType .custom-control .custom-control-label {\n  margin-left: 15px;\n}\n\n\n#input-group-3 {\n  position:relative;\n}\n\n#input-group-3b, #input-group-3 .custom-control-label  {\n  margin-left: 15px;\n}\n\n.bi-search {\n  position: absolute;\n  top: 35px;\n  right: 10px;\n}\n.gender-btn {\n  width:100px;\n  margin:0!important;\n  border-color:#55a1ee;\n  color:#55a1ee;\n}\n.active-gender, .gender-btn:hover {\n  color:#fff!important;\n  background-color:#55a1ee!important;\n}\n.gender-btn-left {\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n}\n.gender-btn-right {\n  margin-left:-1px!important;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\n\n\n@media only screen and (max-width: 768px) {\n  .container {\n    width:100vw;\n    max-width:calc(100% - 20px);\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}