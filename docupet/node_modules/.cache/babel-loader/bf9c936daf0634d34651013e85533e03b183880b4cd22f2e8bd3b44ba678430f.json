{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"container\"\n  }, [_c(\"img\", {\n    staticClass: \"paws\",\n    attrs: {\n      src: require(\"@/assets/paws.png\")\n    }\n  }), _c(\"h1\", [_vm._v(\"Tell us about your pet\")]), _vm.show ? _c(\"b-form\", {\n    on: {\n      submit: _vm.onSubmit,\n      reset: _vm.onReset\n    }\n  }, [_c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-0\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function ({\n        ariaDescribedby\n      }) {\n        return [_c(\"b-form-radio-group\", _vm._g({\n          attrs: {\n            id: \"petType\",\n            \"aria-describedby\": ariaDescribedby\n          },\n          model: {\n            value: _vm.form.checked,\n            callback: function ($$v) {\n              _vm.$set(_vm.form, \"checked\", $$v);\n            },\n            expression: \"form.checked\"\n          }\n        }, _vm.listeners), [_c(\"b-form-radio\", {\n          attrs: {\n            value: \"Dog\"\n          }\n        }, [_vm._v(\"Dog\")]), _c(\"b-form-radio\", {\n          attrs: {\n            value: \"Cat\"\n          }\n        }, [_vm._v(\"Cat\")])], 1)];\n      }\n    }], null, false, 2281517328)\n  }), _vm.petType == \"Dog\" ? _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-1\",\n      label: \"What is your dogs name?\",\n      \"label-for\": \"input-1\",\n      description: \"We'll never share your email with anyone else.\"\n    }\n  }, [_c(\"b-form-input\", {\n    attrs: {\n      id: \"input-1\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.email,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"email\", $$v);\n      },\n      expression: \"form.email\"\n    }\n  })], 1) : _vm._e(), _vm.petType == \"Cat\" ? _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-1\",\n      label: \"What is your dogs name?\",\n      \"label-for\": \"input-1\",\n      description: \"We'll never share your email with anyone else.\"\n    }\n  }, [_c(\"b-form-input\", {\n    attrs: {\n      id: \"input-1\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.email,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"email\", $$v);\n      },\n      expression: \"form.email\"\n    }\n  })], 1) : _vm._e(), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-2\",\n      label: \"Your Name:\",\n      \"label-for\": \"input-2\"\n    }\n  }, [_c(\"b-form-input\", {\n    attrs: {\n      id: \"input-2\",\n      placeholder: \"Enter name\",\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.name,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"name\", $$v);\n      },\n      expression: \"form.name\"\n    }\n  })], 1), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-3\",\n      label: \"Food:\",\n      \"label-for\": \"input-3\"\n    }\n  }, [_c(\"b-form-select\", {\n    attrs: {\n      id: \"input-3\",\n      options: _vm.foods,\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.food,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"food\", $$v);\n      },\n      expression: \"form.food\"\n    }\n  })], 1), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-4\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function ({\n        ariaDescribedby\n      }) {\n        return [_c(\"b-form-checkbox-group\", {\n          attrs: {\n            id: \"checkboxes-4\",\n            \"aria-describedby\": ariaDescribedby\n          },\n          model: {\n            value: _vm.form.checked,\n            callback: function ($$v) {\n              _vm.$set(_vm.form, \"checked\", $$v);\n            },\n            expression: \"form.checked\"\n          }\n        }, [_c(\"b-form-checkbox\", {\n          attrs: {\n            value: \"me\"\n          }\n        }, [_vm._v(\"Check me out\")]), _c(\"b-form-checkbox\", {\n          attrs: {\n            value: \"that\"\n          }\n        }, [_vm._v(\"Check that out\")])], 1)];\n      }\n    }], null, false, 531429359)\n  }), _c(\"b-button\", {\n    attrs: {\n      type: \"submit\",\n      variant: \"primary\"\n    }\n  }, [_vm._v(\"Submit\")]), _c(\"b-button\", {\n    attrs: {\n      type: \"reset\",\n      variant: \"danger\"\n    }\n  }, [_vm._v(\"Reset\")])], 1) : _vm._e(), _c(\"b-card\", {\n    staticClass: \"mt-3\",\n    attrs: {\n      header: \"Form Data Result\"\n    }\n  }, [_c(\"pre\", {\n    staticClass: \"m-0\"\n  }, [_vm._v(_vm._s(_vm.form))])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticClass","attrs","src","require","_v","show","on","submit","onSubmit","reset","onReset","id","scopedSlots","_u","key","fn","ariaDescribedby","_g","model","value","form","checked","callback","$$v","$set","expression","listeners","petType","label","description","type","placeholder","required","email","_e","name","options","foods","food","variant","header","_s","staticRenderFns","_withStripped"],"sources":["/Users/apanemia/Development/2024/docupet/docuPet-test/app/docupet/src/components/RegisterForm.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\"img\", {\n        staticClass: \"paws\",\n        attrs: { src: require(\"@/assets/paws.png\") },\n      }),\n      _c(\"h1\", [_vm._v(\"Tell us about your pet\")]),\n      _vm.show\n        ? _c(\n            \"b-form\",\n            { on: { submit: _vm.onSubmit, reset: _vm.onReset } },\n            [\n              _c(\"b-form-group\", {\n                attrs: { id: \"input-group-0\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function ({ ariaDescribedby }) {\n                        return [\n                          _c(\n                            \"b-form-radio-group\",\n                            _vm._g(\n                              {\n                                attrs: {\n                                  id: \"petType\",\n                                  \"aria-describedby\": ariaDescribedby,\n                                },\n                                model: {\n                                  value: _vm.form.checked,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.form, \"checked\", $$v)\n                                  },\n                                  expression: \"form.checked\",\n                                },\n                              },\n                              _vm.listeners\n                            ),\n                            [\n                              _c(\"b-form-radio\", { attrs: { value: \"Dog\" } }, [\n                                _vm._v(\"Dog\"),\n                              ]),\n                              _c(\"b-form-radio\", { attrs: { value: \"Cat\" } }, [\n                                _vm._v(\"Cat\"),\n                              ]),\n                            ],\n                            1\n                          ),\n                        ]\n                      },\n                    },\n                  ],\n                  null,\n                  false,\n                  2281517328\n                ),\n              }),\n              _vm.petType == \"Dog\"\n                ? _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        id: \"input-group-1\",\n                        label: \"What is your dogs name?\",\n                        \"label-for\": \"input-1\",\n                        description:\n                          \"We'll never share your email with anyone else.\",\n                      },\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"input-1\",\n                          type: \"email\",\n                          placeholder: \"Enter email\",\n                          required: \"\",\n                        },\n                        model: {\n                          value: _vm.form.email,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.form, \"email\", $$v)\n                          },\n                          expression: \"form.email\",\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.petType == \"Cat\"\n                ? _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        id: \"input-group-1\",\n                        label: \"What is your dogs name?\",\n                        \"label-for\": \"input-1\",\n                        description:\n                          \"We'll never share your email with anyone else.\",\n                      },\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"input-1\",\n                          type: \"email\",\n                          placeholder: \"Enter email\",\n                          required: \"\",\n                        },\n                        model: {\n                          value: _vm.form.email,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.form, \"email\", $$v)\n                          },\n                          expression: \"form.email\",\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"b-form-group\",\n                {\n                  attrs: {\n                    id: \"input-group-2\",\n                    label: \"Your Name:\",\n                    \"label-for\": \"input-2\",\n                  },\n                },\n                [\n                  _c(\"b-form-input\", {\n                    attrs: {\n                      id: \"input-2\",\n                      placeholder: \"Enter name\",\n                      required: \"\",\n                    },\n                    model: {\n                      value: _vm.form.name,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form, \"name\", $$v)\n                      },\n                      expression: \"form.name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"b-form-group\",\n                {\n                  attrs: {\n                    id: \"input-group-3\",\n                    label: \"Food:\",\n                    \"label-for\": \"input-3\",\n                  },\n                },\n                [\n                  _c(\"b-form-select\", {\n                    attrs: { id: \"input-3\", options: _vm.foods, required: \"\" },\n                    model: {\n                      value: _vm.form.food,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form, \"food\", $$v)\n                      },\n                      expression: \"form.food\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\"b-form-group\", {\n                attrs: { id: \"input-group-4\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function ({ ariaDescribedby }) {\n                        return [\n                          _c(\n                            \"b-form-checkbox-group\",\n                            {\n                              attrs: {\n                                id: \"checkboxes-4\",\n                                \"aria-describedby\": ariaDescribedby,\n                              },\n                              model: {\n                                value: _vm.form.checked,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.form, \"checked\", $$v)\n                                },\n                                expression: \"form.checked\",\n                              },\n                            },\n                            [\n                              _c(\n                                \"b-form-checkbox\",\n                                { attrs: { value: \"me\" } },\n                                [_vm._v(\"Check me out\")]\n                              ),\n                              _c(\n                                \"b-form-checkbox\",\n                                { attrs: { value: \"that\" } },\n                                [_vm._v(\"Check that out\")]\n                              ),\n                            ],\n                            1\n                          ),\n                        ]\n                      },\n                    },\n                  ],\n                  null,\n                  false,\n                  531429359\n                ),\n              }),\n              _c(\n                \"b-button\",\n                { attrs: { type: \"submit\", variant: \"primary\" } },\n                [_vm._v(\"Submit\")]\n              ),\n              _c(\"b-button\", { attrs: { type: \"reset\", variant: \"danger\" } }, [\n                _vm._v(\"Reset\"),\n              ]),\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"b-card\",\n        { staticClass: \"mt-3\", attrs: { header: \"Form Data Result\" } },\n        [_c(\"pre\", { staticClass: \"m-0\" }, [_vm._v(_vm._s(_vm.form))])]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}