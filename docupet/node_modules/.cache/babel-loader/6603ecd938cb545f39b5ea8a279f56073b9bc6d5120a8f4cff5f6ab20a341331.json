{"ast":null,"code":"export default {\n  name: 'RegisterForm',\n  props: {\n    petType: String\n  },\n  data() {\n    return {\n      form: {\n        email: '',\n        name: '',\n        food: null,\n        checked: []\n      },\n      foods: [{\n        text: 'Select One',\n        value: null\n      }, 'Carrots', 'Beans', 'Tomatoes', 'Corn'],\n      show: true\n    };\n  },\n  methods: {\n    updatePetType() {\n      console.log(petType);\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      alert(JSON.stringify(this.form));\n    },\n    onReset(event) {\n      event.preventDefault();\n      // Reset our form values\n      this.form.email = '';\n      this.form.name = '';\n      this.form.food = null;\n      this.form.checked = [];\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","petType","String","data","form","email","food","checked","foods","text","value","show","methods","updatePetType","console","log","onSubmit","event","preventDefault","alert","JSON","stringify","onReset","$nextTick"],"sources":["src/components/RegisterForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <img src=\"@/assets/paws.png\" class=\"paws\" />\n    <h1>Tell us about your pet</h1>\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\n\n      <b-form-group id=\"input-group-0\" v-slot=\"{ ariaDescribedby }\">\n        <b-form-checkbox-group\n          v-model=\"form.checked\"\n          id=\"petType\"\n          :aria-describedby=\"ariaDescribedby\"\n        >\n          <b-form-checkbox value=\"Dog\" v-on:change=\"updatePetType()\">Dog</b-form-checkbox>\n          <b-form-checkbox value=\"Cat\" v-on:change=\"updatePetType()\">Cat</b-form-checkbox>\n        </b-form-checkbox-group>\n      </b-form-group>\n\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"What is your ${petType}s name?\"\n        label-for=\"input-1\"\n        description=\"We'll never share your email with anyone else.\" \n      >\n        <b-form-input\n          id=\"input-1\"\n          v-model=\"form.email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-form-group id=\"input-group-2\" label=\"Your Name:\" label-for=\"input-2\">\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"form.name\"\n          placeholder=\"Enter name\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-form-group id=\"input-group-3\" label=\"Food:\" label-for=\"input-3\">\n        <b-form-select\n          id=\"input-3\"\n          v-model=\"form.food\"\n          :options=\"foods\"\n          required\n        ></b-form-select>\n      </b-form-group>\n\n      <b-form-group id=\"input-group-4\" v-slot=\"{ ariaDescribedby }\">\n        <b-form-checkbox-group\n          v-model=\"form.checked\"\n          id=\"checkboxes-4\"\n          :aria-describedby=\"ariaDescribedby\"\n        >\n          <b-form-checkbox value=\"me\">Check me out</b-form-checkbox>\n          <b-form-checkbox value=\"that\">Check that out</b-form-checkbox>\n        </b-form-checkbox-group>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n    </b-form>\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\">{{ form }}</pre>\n    </b-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RegisterForm',\n  props: {\n    petType: String\n  },\n  data() {\n    return {\n      form: {\n        email: '',\n        name: '',\n        food: null,\n        checked: []\n      },\n      foods: [{ text: 'Select One', value: null }, 'Carrots', 'Beans', 'Tomatoes', 'Corn'],\n      show: true\n    }\n  },\n  methods: {\n    updatePetType() {\n      console.log(petType)\n    },\n    onSubmit(event) {\n      event.preventDefault()\n      alert(JSON.stringify(this.form))\n    },\n    onReset(event) {\n      event.preventDefault()\n      // Reset our form values\n      this.form.email = ''\n      this.form.name = ''\n      this.form.food = null\n      this.form.checked = []\n      // Trick to reset/clear native browser form validation state\n      this.show = false\n      this.$nextTick(() => {\n        this.show = true\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color:#072b71;\n  font-weight:bold;\n  font-size:1.5em;\n}\n\n.container {\n  position:relative;\n  border-radius: 6px;\n  background-color:#fff;\n  box-shadow: rgba(0,0,0,0.07) 0px 5px 5px;\n  padding:10px 50px;\n  height: auto;\n  width:50vw;\n  min-width:0px;\n  max-width:600px;\n  margin:0 auto;\n  margin-top:50px;\n}\n.paws {\n  width:100%;\n}\n</style>\n"],"mappings":"AAuEA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAN,IAAA;QACAO,IAAA;QACAC,OAAA;MACA;MACAC,KAAA;QAAAC,IAAA;QAAAC,KAAA;MAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACAC,OAAA,CAAAC,GAAA,CAAAd,OAAA;IACA;IACAe,SAAAC,KAAA;MACAA,KAAA,CAAAC,cAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,MAAAjB,IAAA;IACA;IACAkB,QAAAL,KAAA;MACAA,KAAA,CAAAC,cAAA;MACA;MACA,KAAAd,IAAA,CAAAC,KAAA;MACA,KAAAD,IAAA,CAAAL,IAAA;MACA,KAAAK,IAAA,CAAAE,IAAA;MACA,KAAAF,IAAA,CAAAG,OAAA;MACA;MACA,KAAAI,IAAA;MACA,KAAAY,SAAA;QACA,KAAAZ,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}