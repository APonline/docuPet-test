{"ast":null,"code":"export default {\n  name: 'RegisterForm',\n  props: {\n    petType: {\n      type: String,\n      default: 'Dog'\n    }\n  },\n  data() {\n    return {\n      form: {\n        petType: 'Dog',\n        name: '',\n        breed: [],\n        gender: null\n      },\n      dogBreeds: [{\n        text: 'Select One',\n        value: null\n      }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n      catBreeds: [{\n        text: 'Select One',\n        value: null\n      }, 'Siamese', 'Maine Coon', 'Persian', 'Sphynx', 'Burmese', 'Birman', 'American Shorthair', \"Can't find it?\"],\n      show: true,\n      changePetTypeSelected: undefined\n    };\n  },\n  computed: {\n    computedPetType: {\n      get() {\n        return this.petType;\n      },\n      set(newValue) {\n        this.$emit('petTypeChanged', newValue);\n      }\n    }\n  },\n  methods: {\n    updatePetType(e, param) {\n      console.log(e, param);\n      this.petTypeUpdated = e;\n      //this.$emit(\"petType\", e) ;\n      console.log('PETTYPE: ', this.petType);\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      alert(JSON.stringify(this.form));\n    },\n    onReset(event) {\n      event.preventDefault();\n      // Reset our form values\n      this.form.petType = '';\n      this.form.name = '';\n      this.form.gender = null;\n      this.form.breed = [];\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","petType","type","String","default","data","form","breed","gender","dogBreeds","text","value","catBreeds","show","changePetTypeSelected","undefined","computed","computedPetType","get","set","newValue","$emit","methods","updatePetType","e","param","console","log","petTypeUpdated","onSubmit","event","preventDefault","alert","JSON","stringify","onReset","$nextTick"],"sources":["src/components/RegisterForm.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <img src=\"@/assets/paws.png\" class=\"paws\" />\n    <h1>Tell us about your pet</h1>\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\n\n      <b-form-group \n        id=\"input-group-1\" \n        label=\"Choose your type of pet\"\n        label-for=\"petType\"\n        v-slot=\"{ ariaDescribedby }\"\n      >\n        <b-form-radio-group\n          v-model=\"form.petType\"\n          id=\"petType\"\n          :aria-describedby=\"ariaDescribedby\"\n          @petTypeChanged=\"updatePetType($event, 'petType')\"\n        >\n          <b-form-radio value=\"Dog\">Dog</b-form-radio>\n          <b-form-radio value=\"Cat\">Cat</b-form-radio>\n        </b-form-radio-group>\n      </b-form-group>\n\n      <!--DOG-->\n      <b-form-group \n        v-if=\"form.petType =='Dog'\"\n        id=\"input-group-2\"\n        label=\"What is your dog's name?\"\n        label-for=\"input-2\"\n        description=\"We need to know what your pets name is.\" \n      >\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"form.name\"\n          placeholder=\"Milly\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <!--DOG End-->\n\n      <!--CAT-->\n      <b-form-group \n        v-if=\"form.petType =='Cat'\"\n        id=\"input-group-2\"\n        label=\"What is your cat's name?\"\n        label-for=\"input-2\"\n        description=\"We need to know what your pets name is.\" \n      >\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"form.name\"\n          placeholder=\"Puddles\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <!--CAT end-->\n\n\n      <b-form-group id=\"input-group-3\" label=\"Breed:\" label-for=\"input-3\">\n        <b-form-select\n          v-if=\"petType =='Dog'\"\n          id=\"input-3\"\n          v-model=\"form.breed\"\n          :options=\"dogBreeds\"\n          required\n        ></b-form-select>\n      </b-form-group>\n\n      <b-form-group id=\"input-group-4\" v-slot=\"{ ariaDescribedby }\">\n        <b-form-checkbox-group\n          v-model=\"form.checked\"\n          id=\"checkboxes-4\"\n          :aria-describedby=\"ariaDescribedby\"\n        >\n          <b-form-checkbox value=\"me\">Check me out</b-form-checkbox>\n          <b-form-checkbox value=\"that\">Check that out</b-form-checkbox>\n        </b-form-checkbox-group>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n    </b-form>\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\">{{ form }}</pre>\n    </b-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RegisterForm',\n  props: {\n    petType: {\n      type: String,\n      default: 'Dog'\n    },\n  },\n  data() {\n    return {\n      form: {\n        petType: 'Dog',\n        name: '',\n        breed: [],\n        gender: null,\n      },\n      dogBreeds: [{ text: 'Select One', value: null }, 'Beagle', 'Whippet', 'Yorkie', 'German Shepherd', 'Bulldog', 'Poodle', 'Husky', \"Can't find it?\"],\n      catBreeds: [{ text: 'Select One', value: null }, 'Siamese', 'Maine Coon', 'Persian', 'Sphynx', 'Burmese', 'Birman', 'American Shorthair', \"Can't find it?\"],\n      show: true,\n\n      changePetTypeSelected: undefined\n    }\n  },\n  computed: {\n    computedPetType: {\n      get(){\n        return this.petType\n      },\n      set(newValue) {\n        this.$emit('petTypeChanged', newValue)\n      }\n    }\n  },\n  methods: {\n    updatePetType(e, param) {\n      console.log(e, param)\n      this.petTypeUpdated = e;\n      //this.$emit(\"petType\", e) ;\n      console.log('PETTYPE: ', this.petType)\n    },\n    onSubmit(event) {\n      event.preventDefault()\n      alert(JSON.stringify(this.form))\n    },\n    onReset(event) {\n      event.preventDefault()\n      // Reset our form values\n      this.form.petType = ''\n      this.form.name = ''\n      this.form.gender = null\n      this.form.breed = []\n      // Trick to reset/clear native browser form validation state\n      this.show = false\n      this.$nextTick(() => {\n        this.show = true\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color:#072b71;\n  font-weight:bold;\n  font-size:1.5em;\n  margin: 10px 0 20px 0;\n}\n\n.container {\n  position:relative;\n  border-radius: 6px;\n  background-color:#fff;\n  box-shadow: rgba(0,0,0,0.07) 0px 5px 5px;\n  padding:10px 50px;\n  height: auto;\n  width:50vw;\n  min-width:0px;\n  max-width:600px;\n  margin:0 auto;\n  margin-top:50px;\n  text-align: left;\n}\n.paws {\n  width:100%;\n}\n\n.form-group {\n  margin: 20px 0;\n}\n</style>\n"],"mappings":"AAyFA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAL,OAAA;QACAF,IAAA;QACAQ,KAAA;QACAC,MAAA;MACA;MACAC,SAAA;QAAAC,IAAA;QAAAC,KAAA;MAAA;MACAC,SAAA;QAAAF,IAAA;QAAAC,KAAA;MAAA;MACAE,IAAA;MAEAC,qBAAA,EAAAC;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACAC,IAAA;QACA,YAAAjB,OAAA;MACA;MACAkB,IAAAC,QAAA;QACA,KAAAC,KAAA,mBAAAD,QAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,cAAAC,CAAA,EAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,CAAA,EAAAC,KAAA;MACA,KAAAG,cAAA,GAAAJ,CAAA;MACA;MACAE,OAAA,CAAAC,GAAA,mBAAA1B,OAAA;IACA;IACA4B,SAAAC,KAAA;MACAA,KAAA,CAAAC,cAAA;MACAC,KAAA,CAAAC,IAAA,CAAAC,SAAA,MAAA5B,IAAA;IACA;IACA6B,QAAAL,KAAA;MACAA,KAAA,CAAAC,cAAA;MACA;MACA,KAAAzB,IAAA,CAAAL,OAAA;MACA,KAAAK,IAAA,CAAAP,IAAA;MACA,KAAAO,IAAA,CAAAE,MAAA;MACA,KAAAF,IAAA,CAAAC,KAAA;MACA;MACA,KAAAM,IAAA;MACA,KAAAuB,SAAA;QACA,KAAAvB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}